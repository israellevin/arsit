#!/bin/bash

if [ -d chroot ]; then
    stage=9
    echo 'resuming from existing chroot directory'
else
    stages=(0-minbase 1-base 2-graphics)
    for (( stage = 2 ; stage >= 0 ; stage-- )); do
        [ -d "${stages[$stage]}" ] && break
    done
    mkdir chroot
    mount -t tmpfs -o size=60% none chroot
    echo "resuming stage $stage from ${stages[$stage]}"
fi
pushd chroot

stageForward(){
    ((stage++))
    echo "completed stage $stage - copying to (${stages[$stage]})"
    cp -ax ../chroot ../${stages[$stage]}
}

if (( stage < 0 )); then
    debootstrap --variant=minbase sid . http://debian.co.il/debian
    stageForward
elif (( stage != 9 )); then
    cp -a ../${stages[$stage]}/* .
fi

if (( stage < 2 )); then
    chroot_umount(){
        #chroot . /etc/init.d/dbus stop
        #chroot . /etc/init.d/udev stop
        for b in dev sys proc dev/pts; do
            umount $b
        done
        #/etc/init.d/udev start
        #/etc/init.d/dbus start
        trap - EXIT HUP INT TERM
    }
    #/etc/init.d/udev stop
    #/etc/init.d/dbus stop
    for b in dev sys proc dev/pts; do
        mount -B /$b $b
    done
    trap 'chroot_umount' EXIT HUP INT TERM

    if (( stage < 1 )); then
        echo arsawat > etc/hostname
        chroot . apt-get --no-install-recommends --force-yes -y install linux-image-686-pae
        chroot . apt-get --no-install-recommends --force-yes -y install acpi bash-completion dbus git hdparm less mc pciutils tmux unzip unrar-free udisks usbutils vim
        chroot . apt-get --no-install-recommends --force-yes -y install aria2 ca-certificates curl dhcpcd iputils-ping iproute iw netbase netcat openssh-server rsync sshfs w3m wget wireless-tools
        chroot . apt-get --no-install-recommends --force-yes -y install dialog locales
        chroot . dpkg-reconfigure locales
        chroot . dpkg-reconfigure tzdata
        chroot . adduser i
        chroot . addgroup wheel
        chroot . adduser i wheel
        chroot . passwd -d root
        cp boot/vmlinuz* ../.
        cp boot/initrd* ../.
        stageForward
    fi

    chroot . apt-get --no-install-recommends --force-yes -y install libxcb-icccm4 libxcb-keysyms1 x11-xserver-utils xinit xserver-xorg{,\-input-{kbd,mouse,synaptics},\-video-{fbdev,vesa,intel,nouveau,radeon}}
    chroot . apt-get --no-install-recommends --force-yes -y install clipit redshift rxvt-unicode-256color sux unclutter vim-gtk

    echo deb http://debian.co.il/debian sid main contrib non-free > etc/apt/sources.list
    echo deb http://www.deb-multimedia.org sid main non-free >> etc/apt/sources.list
    echo deb http://debian.tu-bs.de/project/aptosid/debian/ sid main fix.main >> etc/apt/sources.list
    chroot . apt-get update
    chroot . apt-get --force-yes -y install alsa-base alsa-utils mplayer2
    chroot . apt-get --force-yes -y install libwebkitgtk-3.0-0
    chroot . apt-get --force-yes -y install libdvdcss2
    chroot . apt-get --force-yes -y install ceni
    chroot . adduser i audio
    chroot . adduser i video
    chroot . adduser i disk
    chroot . adduser i fuse

    if (read -n 1 -p 'taint with nvidia? (y/N) ' q; echo; [ y = "$q" ]); then
        chroot . apt-get --no-install-recommends --force-yes -y install linux-headers-rt-686-pae
        chroot . apt-get --no-install-recommends --force-yes -y install nvidia-kernel-dkms nvidia-vdpau-driver libgl1-nvidia-glx xserver-xorg-video-nvidia
    fi
    if (read -n 1 -p 'free glx? (y/N) ' q; echo; [ y = "$q" ]); then
        chroot . apt-get --no-install-recommends --force-yes -y install libgl1-mesa-glx libgl1-mesa-dri
    fi
    if (read -n 1 -p 'iwlwifi? (y/N) ' q; echo; [ y = "$q" ]); then
        chroot . apt-get --no-install-recommends --force-yes -y install firmware-iwlwifi
    fi

    chroot . apt-get clean
    chroot_umount
    stageForward
fi

if (read -n 1 -p 'overlay? (y/N) ' q; echo; [ y = "$q" ]); then
    rsync -arv ../overlay/ .
fi

if (read -n 1 -p 'trim? (y/N) ' q; echo; [ y = "$q" ]); then
    rm -rf boot
    rm -rf usr/share{doc,info,man}
    find usr/share/locale/ -maxdepth 1 -mindepth 1 ! -iname 'en' -exec rm -rf {} \;
fi

gettarget(){
    if [ -d "$tr" ]; then
        read -n 1 -p "copy to $tr? (Y/n) " q; echo; echo
        [ n = "$q" ] || return 0
        tr=''
    else
        read -p 'destination (/media/booter/syslinux): ' tr && [ "$tr" ] || tr=/media/booter/syslinux
    fi
    gettarget
}

if (read -n 1 -p 'copy tar? (y/N) ' q; echo; [ y = "$q" ]); then
    rm -rf dev
    rm -rf sys
    rm -rf run
    rm -rf proc
    rm -rf tmp
    rm -rf mnt
    mkdir dev
    mkdir sys
    mkdir run
    mkdir proc
    mkdir -m 777 tmp
    mkdir -m 777 mnt
    gettarget
    tar cf - . | pv -s $(du -sb . | awk '{print $1}') > "$tr/ars.tar"
fi

popd

if (read -n 1 -p 'copy kernel? (y/N) ' q; echo; [ y = "$q" ]); then
    gettarget
    cp vmlinuz* "$tr/arsvmlinuz"
fi


if (read -n 1 -p 'copy initrd? (y/N) ' q; echo; [ y = "$q" ]); then
    rm -rf xinitrd
    mkdir xinitrd
    pushd xinitrd
    cat ../initrd* | gunzip | cpio -i
    rm -rf lib/modules
    cp -a ../chroot/lib/modules lib/.
    mkdir 'mnt'
    cp ../local scripts/.
    cp `which pv` 'bin/.'
    cp `which tar` 'bin/.'
    #cp `which depmod` 'bin/.'
    #chroot . depmod
    gettarget
    find . -mount | cpio -o -H newc > "$tr/arsinitrd"
    popd
fi

read -n 1 -p 'clean chroot? (y/N) ' q; echo; [ y = "$q" ] || exit 0
umount chroot
rmdir chroot
exit 0
